# Builds libumf_proxy and runs tests with it
name: Proxy library

on: workflow_call

permissions:
  contents: read

env:
  BUILD_DIR : "${{github.workspace}}/build"
  INSTL_DIR : "${{github.workspace}}/../install-dir"

jobs:
  proxy-ubuntu:
    name: Ubuntu

    strategy:
      matrix:
        os: ['ubuntu-22.04']
        build_type: [Release, Debug]
        compiler: [{c: gcc, cxx: g++}]
        proxy_lib_pool: ['SCALABLE', 'JEMALLOC']
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libhwloc-dev libjemalloc-dev libtbb-dev

      - name: Set ptrace value for IPC test
        run: sudo bash -c "echo 0 > /proc/sys/kernel/yama/ptrace_scope"

      - name: Configure build
        run: >
          cmake
          -B ${{env.BUILD_DIR}}
          -DCMAKE_INSTALL_PREFIX="${{env.INSTL_DIR}}"
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
          -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
          -DUMF_BUILD_SHARED_LIBRARY=ON
          -DUMF_BUILD_BENCHMARKS=ON
          -DUMF_BUILD_TESTS=ON
          -DUMF_FORMAT_CODE_STYLE=OFF
          -DUMF_DEVELOPER_MODE=OFF
          -DUMF_BUILD_LIBUMF_POOL_JEMALLOC=ON
          -DUMF_BUILD_LIBUMF_POOL_DISJOINT=ON
          -DUMF_TESTS_FAIL_ON_SKIP=ON
          -DUMF_PROXY_LIB_BASED_ON_POOL=${{matrix.proxy_lib_pool}}

      - name: Build UMF
        run: cmake --build ${{env.BUILD_DIR}} -j $(nproc)

      - name: Run "ctest --output-on-failure" with proxy library
        working-directory: ${{env.BUILD_DIR}}
        run: LD_PRELOAD=./lib/libumf_proxy.so ctest --output-on-failure

      - name: Run "./test/umf_test-memoryPool" with proxy library
        working-directory: ${{env.BUILD_DIR}}
        run: LD_PRELOAD=./lib/libumf_proxy.so ./test/umf_test-memoryPool

      - name: Run "/usr/bin/ls" with proxy library
        working-directory: ${{env.BUILD_DIR}}
        run: LD_PRELOAD=./lib/libumf_proxy.so /usr/bin/ls

      - name: Run "/usr/bin/date" with proxy library
        working-directory: ${{env.BUILD_DIR}}
        run: LD_PRELOAD=./lib/libumf_proxy.so /usr/bin/date
